# Generated by precisionFDA exporter (v1.0.3) on 2018-06-13 23:43:09 +0000
# The asset download links in this file are valid only for 24h.

# Exported app: bwa_mem_bamsormadup, revision: 3, authored by: mark.wright
# https://precision.fda.gov/apps/app-BkY1J8802JQVvY5pbJJ3G7Gk

# For more information please consult the app export section in the precisionFDA docs

# Start with Ubuntu 14.04 base image
FROM ubuntu:14.04

# Install default precisionFDA Ubuntu packages
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y \
	aria2 \
	byobu \
	cmake \
	cpanminus \
	curl \
	dstat \
	g++ \
	git \
	htop \
	libboost-all-dev \
	libcurl4-openssl-dev \
	libncurses5-dev \
	make \
	perl \
	pypy \
	python-dev \
	python-pip \
	r-base \
	ruby1.9.3 \
	wget \
	xz-utils

# Install default precisionFDA python packages
RUN pip install \
	requests==2.5.0 \
	futures==2.2.0 \
	setuptools==10.2

# Add DNAnexus repo to apt-get
RUN /bin/bash -c "echo 'deb http://dnanexus-apt-prod.s3.amazonaws.com/ubuntu trusty/amd64/' > /etc/apt/sources.list.d/dnanexus.list"
RUN /bin/bash -c "echo 'deb http://dnanexus-apt-prod.s3.amazonaws.com/ubuntu trusty/all/' >> /etc/apt/sources.list.d/dnanexus.list"
RUN curl https://wiki.dnanexus.com/images/files/ubuntu-signing-key.gpg | apt-key add -

# Update apt-get
RUN DEBIAN_FRONTEND=noninteractive apt-get update

# Download app assets
RUN curl https://dl.dnanex.us/F/D/JQj3xK89py0zjJ28389p6q688Xj1fxz3B7kfkF54/biobambam2-2.0.25.tar.gz | tar xzf - -C / --no-same-owner --no-same-permissions
RUN curl https://dl.dnanex.us/F/D/gZGkPX52zbb8g9vkgBP12Kxkf02gzg726yz6p14F/bwa-0.7.12.tar.gz | tar xzf - -C / --no-same-owner --no-same-permissions
RUN curl https://dl.dnanex.us/F/D/KB6fk3z0zkYpby8648pP24pYp444Ygyv8KJpjJ5y/bwa-grch37.tar.gz | tar xzf - -C / --no-same-owner --no-same-permissions
RUN curl https://dl.dnanex.us/F/D/243gXKq89GxqFyk9gkYzBpk3JG7vFK718y8x9PPK/bwa-hs37d5.tar.gz | tar xzf - -C / --no-same-owner --no-same-permissions

# Download helper executables
RUN curl https://dl.dnanex.us/F/D/0K8P4zZvjq9vQ6qV0b6QqY1z2zvfZ0QKQP4gjBXp/emit-1.0.tar.gz | tar xzf - -C /usr/bin/ --no-same-owner --no-same-permissions
RUN curl https://dl.dnanex.us/F/D/bByKQvv1F7BFP3xXPgYXZPZjkXj9V684VPz8gb7p/run-1.2.tar.gz | tar xzf - -C /usr/bin/ --no-same-owner --no-same-permissions

# Write app spec and code to root folder
RUN ["/bin/bash","-c","echo -E \\{\\\"spec\\\":\\{\\\"input_spec\\\":\\[\\{\\\"name\\\":\\\"reads\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Reads\\ \\(first\\ mates\\)\\\",\\\"help\\\":\\\"A\\ gzipped\\ FASTQ\\ file\\ \\(may\\ be\\ interleaved\\ paired\\ reads\\)\\ with\\ the\\ reads\\ to\\ be\\ processed.\\\"\\},\\{\\\"name\\\":\\\"reads2\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":true,\\\"label\\\":\\\"Reads\\ \\(second\\ mates\\)\\\",\\\"help\\\":\\\"For\\ paired\\ reads,\\ the\\ gzipped\\ FASTQ\\ file\\ with\\ the\\ second\\ mates\\ of\\ the\\ reads\\ \\(non-interleaved\\ format\\)\\\"\\},\\{\\\"name\\\":\\\"sample\\\",\\\"class\\\":\\\"string\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Sample\\\",\\\"help\\\":\\\"A\\ string\\ \\(without\\ spaces\\)\\ describing\\ the\\ sample,\\ which\\ will\\ appear\\ in\\ the\\ read\\ group\\ information\\ in\\ the\\ BAM\\ file\\ and\\ in\\ the\\ sample\\ information\\ in\\ the\\ VCF\\ file.\\\"\\},\\{\\\"name\\\":\\\"read_group_id\\\",\\\"class\\\":\\\"string\\\",\\\"optional\\\":true,\\\"label\\\":\\\"Read\\ group\\ ID\\\",\\\"help\\\":\\\"\\(Optional\\)\\ A\\ string\\ \\(without\\ spaces\\)\\ denoting\\ the\\ read\\ group\\ id\\ \\(usually\\ a\\ flowcell\\ and\\ a\\ lane\\)\\ which\\ will\\ appear\\ in\\ the\\ read\\ group\\ information\\ in\\ the\\ BAM\\ file.\\ If\\ not\\ given,\\ the\\ read\\ group\\ id\\ will\\ be\\ assigned\\ the\\ same\\ value\\ as\\ the\\ sample\\ id.\\\"\\},\\{\\\"name\\\":\\\"mark_as_secondary\\\",\\\"class\\\":\\\"boolean\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Mark\\ shorter\\ split\\ hits\\ as\\ secondary\\?\\\",\\\"help\\\":\\\"If\\ long\\ reads\\ are\\ split\\ among\\ multiple\\ locations\\ in\\ the\\ genome\\ \\(because\\ different\\ parts\\ of\\ the\\ same\\ read\\ align\\ to\\ different\\ locations\\),\\ select\\ this\\ to\\ mark\\ the\\ shorter\\ ones\\ as\\ secondary\\ alignments.\\ This\\ will\\ ensure\\ better\\ downstream\\ compatibility\\ with\\ Picard\\ and\\ GATK,\\ as\\ some\\ of\\ these\\ tools\\ are\\ not\\ designed\\ for\\ multiple\\ primary\\ split\\ alignments.\\ This\\ will\\ supply\\ the\\ \\'-M\\'\\ option\\ to\\ \\'bwa\\ mem\\'.\\\",\\\"default\\\":true\\},\\{\\\"name\\\":\\\"use_hs37d5\\\",\\\"class\\\":\\\"boolean\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Use\\ hs37d5\\ instead\\ of\\ GRCh37\\?\\\",\\\"help\\\":\\\"Select\\ this\\ to\\ use\\ the\\ hs37d5\\ reference\\ genome\\ \\(i.e.\\ GRCh37\\ plus\\ decoy\\ sequences\\ and\\ EBV\\).\\\",\\\"default\\\":true\\},\\{\\\"name\\\":\\\"output_name\\\",\\\"class\\\":\\\"string\\\",\\\"optional\\\":true,\\\"label\\\":\\\"Output\\ name\\\",\\\"help\\\":\\\"A\\ name\\ after\\ which\\ the\\ output\\ files\\ will\\ be\\ called\\ \\(name.bam,\\ etc.\\).\\ If\\ not\\ given,\\ the\\ output\\ files\\ will\\ be\\ named\\ after\\ the\\ reads\\ file.\\\"\\},\\{\\\"name\\\":\\\"interleaved_fastq\\\",\\\"class\\\":\\\"boolean\\\",\\\"optional\\\":true,\\\"label\\\":\\\"Input\\ is\\ interleaved\\ paired\\ reads\\\",\\\"help\\\":\\\"This\\ option\\ must\\ be\\ set\\ to\\ true\\ if\\ a\\ single,\\ interleaved\\ paired-end\\ reads\\ file\\ is\\ being\\ used\\\",\\\"default\\\":false\\}\\],\\\"output_spec\\\":\\[\\{\\\"name\\\":\\\"sorted_bam\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Sorted\\ mappings\\\",\\\"help\\\":\\\"A\\ BAM\\ file\\ with\\ the\\ resulting\\ mappings\\ \\(sorted\\ and\\ duplicates-marked\\).\\\"\\},\\{\\\"name\\\":\\\"sorted_bai\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Sorted\\ mappings\\ index\\\",\\\"help\\\":\\\"The\\ associated\\ BAM\\ index\\ file.\\\"\\},\\{\\\"name\\\":\\\"duplication_metrics\\\",\\\"class\\\":\\\"file\\\",\\\"optional\\\":false,\\\"label\\\":\\\"Duplication\\ metrics\\\",\\\"help\\\":\\\"A\\ file\\ containing\\ duplication\\ metrics\\ \\(statistics\\)\\ as\\ output\\ by\\ bamsormadup.\\\"\\}\\],\\\"internet_access\\\":false,\\\"instance_type\\\":\\\"baseline-32\\\"\\},\\\"assets\\\":\\[\\\"file-Bk5K5yj0qVbBGGVf5V8ZKP2P\\\",\\\"file-Bk5K5yj0qVb80kZp2GpXV1Y9\\\",\\\"file-Bk5qPZ00qVbJBV9k1b449p7F\\\",\\\"file-Bk5v9G80qVbJF1bvgxqBGK3V\\\"\\],\\\"packages\\\":\\[\\]\\} \u003e /spec.json"]
RUN ["/bin/bash","-c","echo -E \\{\\\"code\\\":\\\"\\#\\ If\\ no\\ output\\ name\\ was\\ given,\\ construct\\ one\\ from\\ the\\ reads\\\\nif\\ \\[\\[\\ \\\\\\\"\\$output_name\\\\\\\"\\ \\=\\=\\ \\\\\\\"\\\\\\\"\\ \\]\\]\\;\\ then\\\\n\\ \\ output_name\\=\\\\\\\"\\$reads_prefix\\\\\\\"\\\\n\\ \\ \\#\\ Reads\\ are\\ often\\ called\\ \\\\\\\"something_1.fastq.gz\\\\\\\"\\;\\ remove\\ \\\\\\\"_1\\\\\\\"\\\\n\\ \\ output_name\\=\\\\\\\"\\$\\{output_name\\%_1\\}\\\\\\\"\\\\n\\ \\ output_name\\=\\\\\\\"\\$\\{output_name\\%_R1\\}\\\\\\\"\\\\nfi\\\\n\\\\n\\#\\ Clean\\ up\\ sample\\\\nsample\\=\\\\\\\"\\$\\{sample//\\[\\^-.0-9@A-Z_a-z\\]/\\}\\\\\\\"\\\\n\\\\n\\#\\ If\\ no\\ read\\ group\\ was\\ given,\\ use\\ same\\ value\\ as\\ sample\\\\nif\\ \\[\\[\\ \\\\\\\"\\$read_group_id\\\\\\\"\\ \\=\\=\\ \\\\\\\"\\\\\\\"\\ \\]\\]\\;\\ then\\\\n\\ \\ read_group_id\\=\\\\\\\"\\$sample\\\\\\\"\\\\nfi\\\\n\\\\n\\#\\ Set\\ up\\ BWA\\ options\\\\nopts\\=\\(\\)\\\\nopts\\+\\=\\(\\\\\\\"-t\\\\\\\"\\ \\\\\\\"\\`nproc\\`\\\\\\\"\\)\\\\nopts\\+\\=\\(\\\\\\\"-R\\\\\\\"\\ \\\\\\\"@RG\\\\\\\\tID:\\$\\{read_group_id\\}\\\\\\\\tPL:ILLUMINA\\\\\\\\tSM:\\$\\{sample\\}\\\\\\\"\\)\\\\nif\\ \\[\\[\\ \\\\\\\"\\$mark_as_secondary\\\\\\\"\\ \\=\\=\\ \\\\\\\"true\\\\\\\"\\ \\]\\]\\;\\ then\\\\n\\ \\ opts\\+\\=\\(\\\\\\\"-M\\\\\\\"\\)\\\\nfi\\\\nif\\ \\[\\[\\ \\\\\\\"\\$use_hs37d5\\\\\\\"\\ \\]\\]\\;\\ then\\\\n\\ \\ opts\\+\\=\\(\\\\\\\"hs37d5.fa\\\\\\\"\\)\\\\nelse\\\\n\\ \\ opts\\+\\=\\(\\\\\\\"grch37.fa\\\\\\\"\\)\\\\nfi\\\\nif\\ \\[\\[\\ \\\\\\\"\\$interleaved_fastq\\\\\\\"\\ \\=\\=\\ \\\\\\\"true\\\\\\\"\\ \\]\\]\\;\\ then\\\\n\\ \\ opts\\+\\=\\(\\\\\\\"-p\\\\\\\"\\)\\\\nfi\\\\nopts\\+\\=\\(\\\\\\\"\\$reads_path\\\\\\\"\\)\\\\nif\\ \\[\\[\\ \\\\\\\"\\$reads2\\\\\\\"\\ \\!\\=\\ \\\\\\\"\\\\\\\"\\ \\]\\]\\;\\ then\\\\n\\ \\ opts\\+\\=\\(\\\\\\\"\\$reads2_path\\\\\\\"\\)\\\\nfi\\\\n\\\\nbwa\\ mem\\ \\\\\\\"\\$\\{opts\\[@\\]\\}\\\\\\\"\\ \\|\\ /opt/biobambam2/bin/bamsormadup\\ inputformat\\=sam\\ indexfilename\\=\\\\\\\"\\$output_name\\\\\\\".bam.bai\\ M\\=\\\\\\\"\\$output_name\\\\\\\".duplication_metrics\\ \\\\u003e\\ \\\\\\\"\\$output_name\\\\\\\".bam\\\\n\\\\nemit\\ sorted_bam\\ \\\\\\\"\\$output_name\\\\\\\".bam\\\\nemit\\ sorted_bai\\ \\\\\\\"\\$output_name\\\\\\\".bam.bai\\\\nemit\\ duplication_metrics\\ \\\\\\\"\\$output_name\\\\\\\".duplication_metrics\\\"\\} | python -c 'import sys,json; print json.load(sys.stdin)[\"code\"]' \u003e /script.sh"]

# Create directory /work and set it to $HOME and CWD
RUN mkdir -p /work
ENV HOME="/work"
WORKDIR /work

# Set entry point to container
ENTRYPOINT ["/usr/bin/run"]

VOLUME /data
VOLUME /work